---
- gather_facts: {{ gather_facts }}
  hosts: {{ hosts }}
  tasks: 
{% if key_destination is defined %}
  - name: Create an EC2 key
    register: ec2_key
    ec2_key:
      name: {{ keypair_name }}
  - name: Check keypair existence at server and at host
    when: not ec2_key.changed
    fail:
      msg: The keypair {{ keypair_name }} exists in the server but not in our computer. Please remove the keypair at server or locate it at your computer.
  - name: Store the created cluster's private EC2 key at CLAP private folder
    when: ec2_key.changed
    copy:
      content: "{{ '{{' }} ec2_key.key.private_key {{ '}}' }}"
      dest: {{ key_destination }}
      mode: 0600
{% endif %}
{% if create_security_group is defined %}
  - name: Create a new security group
    ec2_group: 
      name: {{ security_group }}
      description: Default security group created with CLAP
      rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
      rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
{% endif %}
  - name: {{ task_name }}
    register: ec2_vals
    ec2: 
      key_name: {{ keypair_name }}
      instance_type: {{ instance_type }}
      image: {{ image_id }}
      count: {{ count }}
      wait: {{ wait }}
      wait_timeout: {{ instance_wait_timeout }}
      group: {{ security_group }}
      instance_tags: 
{% for key, val in instance_tags.items() %}
        {{key}}: {{val}}
{% endfor %}
{% if placement_group is defined %}
      placement_group: {{ placement_group }}
{% endif %}
{% if vpc_subnet_id is defined %}
      vpc_subnet_id: {{ vpc_subnet_id }}
      assign_public_ip: yes
{% endif %}
{% if device_name is defined %}
      volumes:
      - device_name: {{ device_name }}
        delete_on_termination: true
        volume_type: {{ volume_type }}
{% if volume_size is defined %}
        volume_size: {{ volume_size }}
{% endif %}
{% if snapshot is defined %}
        snapshot: {{ snapshot }}
{% endif %}
{% if iops is defined %}
        iops: {{ iops }}
{% endif %}
{% endif %}