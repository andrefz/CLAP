:mod:`clap.app.server.commands`
===============================

.. py:module:: clap.app.server.commands


Module Contents
---------------


.. function:: __get_instance_api(**kwargs)


.. function:: node_start(queue: Queue, nodes: Dict[str, int], tag: Dict[str, str] = None, group: str = None, group_extra: Dict = None, **kwargs)


.. function:: node_alive(node_ids: List[str] = None, tag: Dict[str, str] = None, **kwargs)


.. function:: node_get(node_ids: List[str] = None, tags: Dict[str, str] = None, **kwargs) -> List[NodeInfo]


.. function:: node_add_tag(tags: Dict[str, str], node_ids: List[str] = None, **kwargs)


.. function:: node_remove_tag(tags: List[str], node_ids: List[str] = None, **kwargs)


.. function:: node_stop(node_ids: List[str] = None, tags: Dict[str, str] = None, **kwargs)


.. function:: group_add(group: str, group_extra: Dict = None, node_ids: List[str] = None, tags: Dict[str, str] = None, **kwargs) -> List[NodeInfo]


.. function:: group_remove()


.. function:: group_action(group: str, action: str, group_extra: Dict = None, node_ids: List[str] = None, tags: Dict[str, str] = None, **kwargs) -> List[NodeInfo]


.. function:: group_get(**kwargs) -> Dict[str, Tuple[List[str], List[str], str]]


.. function:: __save_yaml(yaml_string: str, filename: str) -> bool


.. function:: get_templates(**kwargs) -> Dict[str, Any]


.. function:: read_provider_file(**kwargs) -> str


.. function:: read_login_file(**kwargs) -> str


.. function:: read_template_file(**kwargs) -> str


.. function:: save_provider_file(yaml_string: str) -> bool


.. function:: save_login_file(yaml_string: str) -> bool


.. function:: save_template_file(yaml_string: str) -> bool


