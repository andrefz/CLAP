:mod:`clap.modules.cluster.module`
==================================

.. py:module:: clap.modules.cluster.module


Module Contents
---------------


.. py:exception:: ConfigurationError

   Bases: :class:`Exception`


.. py:class:: ClusterState

   .. attribute:: CLUSTER_RUNNING
      :annotation: = running

      

   .. attribute:: CLUSTER_PAUSED
      :annotation: = paused

      


.. function:: __get_setups__(config_dict: dict) -> dict


.. function:: __get_clusters__(config_dict: dict) -> dict


.. function:: __validate_cluster_setups__(cluster_name: str, cluster_dict: dict, setups: dict) -> dict


.. function:: __perform_replacements__(config, extra_args: Dict[str, str])


.. function:: __validate_nodes__(cluster_name: str, cluster_data: dict, valid_instances: List[str]) -> dict


.. function:: __validate_groups_and_actions__(cluster_name: str, cluster_data: dict, valid_groups: Dict[str, List[str]]) -> dict


.. function:: get_cluster_config(cluster_files: List[str], cluster_name: str, extra_args: Dict[str, str] = None)


.. function:: __add_nodes_to_cluster__(cluster: ClusterData, node_types: Dict[str, Tuple[int, int]]) -> Dict[str, List[str]]


.. function:: cluster_create(cluster_files: List[str], cluster_name: str, extra_args: Dict[str, str] = None, no_setup: bool = False) -> Tuple[ClusterData, List[NodeInfo]]


.. function:: add_nodes_to_cluster(cluster_id: str, node_types: Dict[str, int] = None, no_setup: bool = False) -> Tuple[ClusterData, List[NodeInfo]]


.. function:: cluster_setup(cluster_id: str, nodes_type: Dict[str, List[str]], re_add_to_group: bool = False) -> List[str]


.. function:: update_cluster_config(cluster_files: List[str], cluster_id: str, extra_args: Dict[str, str] = None) -> ClusterData


.. function:: add_existing_nodes_to_cluster(cluster_id: str, node_types: Dict[str, List[str]])


.. function:: __get_nodes_from_cluster__(cluster_id: str, node_ids: List[str]) -> Tuple[List[str], List[str]]


.. function:: cluster_stop(cluster_id: str, do_not_stop: bool = False) -> Tuple[List[str], List[str]]


.. function:: cluster_alive(cluster_id: str) -> Dict[str, bool]


.. function:: cluster_pause(cluster_id: str) -> Tuple[List[str], List[str]]


.. function:: cluster_resume(cluster_id: str) -> List[str]


.. function:: list_clusters(cluster_id: str = None) -> dict


.. function:: list_templates()


.. function:: run_playbook_in_nodes(playbook_path: str, node_ids: List[str], extra_args: Dict[str, str]) -> Dict[str, bool]


.. function:: run_command(node_ids: List[str], command_string: str)


